CREATE TABLE IF NOT EXISTS note(
	noteid INT(10) NOT NULL,
	note VARCHAR(10000) NOT NULL,
	creationdatetime TIMESTAMP NOT NULL,
	revisiondatetime TIMESTAMP NOT NULL,
	CONSTRAINT pk_note PRIMARY KEY (noteid)
);

CREATE TABLE IF NOT EXISTS household(
	houseid INT(10) NOT NULL,
	idtype VARCHAR(1) NOT NULL,
	name VARCHAR(20),
	addressee1 VARCHAR(35),
	addressee2 VARCHAR(35),
	salutation VARCHAR(35),
	personassigned VARCHAR(25) COMMENT 'Elder',
	housetype VARCHAR(20),
	ministrygroup VARCHAR(20),
	useroption1 VARCHAR(25),
	useroption2 VARCHAR(25),
	useroption3 VARCHAR(25),
	usertext1 VARCHAR(25),
	usertext2 VARCHAR(25),
	usertext3 VARCHAR(25),
	userdate1 DATE,
	userdate2 DATE,
	userdate3 DATE,
	noteid INT(10),
	creationdatetime TIMESTAMP NOT NULL,
	revisiondatetime TIMESTAMP NOT NULL,
	emailaddress VARCHAR(50),
	photofilename VARCHAR(250),
	photodesc VARCHAR(250),
	photodate DATE,
	hasattachment BOOLEAN NOT NULL DEFAULT FALSE,
	emailaddressisunlisted BOOLEAN NOT NULL DEFAULT FALSE,
	newsletter BOOLEAN NOT NULL DEFAULT TRUE,
	defaultimagesize INT(10),
	CONSTRAINT pk_household PRIMARY KEY (houseid),
	CONSTRAINT fk_household_noteid FOREIGN KEY (noteid) REFERENCES note(noteid)
);

CREATE TABLE IF NOT EXISTS person(
	personid INT(10) NOT NULL,
	idtype VARCHAR(1) NOT NULL,
	houseid INT(10),
	firstname VARCHAR(15),
	middlename VARCHAR(15),
	maidenname VARCHAR(20),
	lastname VARCHAR(20),
	nickname VARCHAR(15),
	namesuffix VARCHAR(15),
	salutation VARCHAR(30),
	title VARCHAR(20),
	sequence INT(10),
	register VARCHAR(10),
	sex VARCHAR(1) NOT NULL,
	birthdate DATE,
	ethnicorigin VARCHAR(20),
	ismember BOOLEAN NOT NULL DEFAULT FALSE,
	memberparticipation VARCHAR(20),
	receivedby VARCHAR(20),
	receiveddate DATE,
	removedby VARCHAR(20),
	removeddate DATE,
	isbaptized BOOLEAN NOT NULL DEFAULT FALSE,
	baptismdate DATE,
	isconfirmed BOOLEAN NOT NULL DEFAULT FALSE,
	confirmationdate DATE,
	isfirstcommunion BOOLEAN NOT NULL DEFAULT FALSE,
	firstcommuniondate DATE,
	churchbackground VARCHAR(20),
	occupationtitle VARCHAR(20),
	workshift VARCHAR(20),
	employerline1 VARCHAR(35),
	employerline2 VARCHAR(35),
	militarystatus VARCHAR(20),
	educationlevel VARCHAR(20),
	currentschool VARCHAR(35),
	currentgrade VARCHAR(20),
	gradenumber INT(10),
	sundayschoolgrade VARCHAR(20),
	sundayschoolsection VARCHAR(1),
	sundayschoolgradenumber INT(10),
	useroption1 VARCHAR(25),
	useroption2 VARCHAR(25),
	useroption3 VARCHAR(25),
	usertext1 VARCHAR(25),
	usertext2 VARCHAR(25),
	usertext3 VARCHAR(25),
	userdate1 DATE,
	userdate2 DATE,
	userdate3 DATE,
	familyrelationship VARCHAR(20),
	maritalstatus VARCHAR(20),
	weddingdate DATE,
	numberofchildren INT(10),
	childrenliving INT(10),
	spousename VARCHAR(35),
	fathersname VARCHAR(35),
	mothersname VARCHAR(35),
	noteid INT(10),
	creationdatetime TIMESTAMP,
	revisiondatetime TIMESTAMP,
	datewidowed DATE,
	membercode INT(10),
	emailpersonal VARCHAR(50),
	emailwork VARCHAR(50),
	birthplace VARCHAR(100),
	ischurchuserdef3 BOOLEAN NOT NULL DEFAULT FALSE,
	churchuserdate3 DATE,
	photofilename VARCHAR(250),
	photodesc VARCHAR(250),
	photodate DATE,
	hasattachment BOOLEAN NOT NULL DEFAULT FALSE,
	exporttoweb BOOLEAN NOT NULL DEFAULT TRUE,
	cellpharea VARCHAR(5),
	cellphnumber VARCHAR(10),
	cellphislisted BOOLEAN NOT NULL DEFAULT FALSE,
	emailpersonalisunlisted BOOLEAN DEFAULT TRUE,
	emailworkisunlisted BOOLEAN DEFAULT TRUE,
	contactmethod VARCHAR(15),
	showinunite BOOLEAN NOT NULL DEFAULT FALSE,
	ssunitepushrequired BOOLEAN NOT NULL DEFAULT FALSE,
	lastssunitepush TIMESTAMP,
	defaultimagesize INT(10),
	CONSTRAINT pk_person PRIMARY KEY (personid),
	/*CONSTRAINT fk_person_houseid FOREIGN KEY (houseid) REFERENCES household(houseid),*/
	CONSTRAINT fk_person_noteid FOREIGN KEY (noteid) REFERENCES note(noteid)
);

CREATE TABLE IF NOT EXISTS addressphonexref(
	xrefid INT(10) NOT NULL,
	idtype VARCHAR(1) NOT NULL COMMENT 'This field is H for household or P for person.',
	id INT(10) NOT NULL COMMENT 'This field is the primary key of household or person based upon the value of the idtype column.',
	creationdatetime TIMESTAMP NOT NULL,
	revisiondatetime TIMESTAMP NOT NULL,
	CONSTRAINT pk_addressphonexref PRIMARY KEY (xrefid)
);

CREATE TABLE IF NOT EXISTS address(
	addressid INT(10) NOT NULL,
	xrefid INT(10) NOT NULL,
	isprimary BOOLEAN NOT NULL DEFAULT FALSE,
	address1 VARCHAR(50),
	address2 VARCHAR(50),
	city VARCHAR(50),
	state VARCHAR(50),
	zipcode VARCHAR(50),
	countryid INT(10),
	carrierroute VARCHAR(5),
	countycode VARCHAR(50),
	description VARCHAR(1000),
	mappage VARCHAR(5),
	mapcol VARCHAR(5),
	maprow VARCHAR(5),
	begindate TIMESTAMP,
	enddate TIMESTAMP,
	isrecurring BOOLEAN NOT NULL DEFAULT FALSE,
	lastrolochg TIMESTAMP,
	noteid INT(10),
	creationdatetime TIMESTAMP NOT NULL,
	revisiondatetime TIMESTAMP NOT NULL,
	deliverypoint VARCHAR(5),
	checkdigit VARCHAR(3),
	lotnumber VARCHAR(7),
	lastcass TIMESTAMP,
	CONSTRAINT pk_address PRIMARY KEY (addressid),
	CONSTRAINT fk_address_xrefid FOREIGN KEY (xrefid) REFERENCES addressphonexref(xrefid),
	CONSTRAINT fk_address_noteid FOREIGN KEY (noteid) REFERENCES note(noteid)
);

CREATE TABLE IF NOT EXISTS phone(
	phoneid INT(10) NOT NULL,
	xrefid INT(10) NOT NULL,
	type VARCHAR(10) NOT NULL,
	areacode VARCHAR(3) NOT NULL,
	number VARCHAR(7) NOT NULL,
	extension VARCHAR(6) NOT NULL,
	islisted BOOLEAN NOT NULL DEFAULT TRUE,
	description VARCHAR(35),
	noteid INT(10),
	creationdatetime TIMESTAMP NOT NULL,
	revisiondatetime TIMESTAMP NOT NULL,
	CONSTRAINT pk_phone PRIMARY KEY (phoneid),
	/*CONSTRAINT fk_phone_xrefid FOREIGN KEY (xrefid) REFERENCES addressphonexref(xrefid),*/
	CONSTRAINT fk_phone_noteid FOREIGN KEY (noteid) REFERENCES note(noteid)
);

CREATE TABLE IF NOT EXISTS event(
	eventid INT(10) NOT NULL,
	type1 BOOLEAN NOT NULL DEFAULT FALSE,
	type2 BOOLEAN NOT NULL DEFAULT FALSE,
	type3 BOOLEAN NOT NULL DEFAULT FALSE,
	type4 BOOLEAN NOT NULL DEFAULT FALSE,
	type5 BOOLEAN NOT NULL DEFAULT FALSE,
	eventname VARCHAR(20) NOT NULL,
	description VARCHAR(70),
	isactive BOOLEAN NOT NULL DEFAULT TRUE,
	noteid INT(10),
	creationdatetime TIMESTAMP,
	revisiondatetime TIMESTAMP,
	includeinstats BOOLEAN NOT NULL DEFAULT TRUE,
	includeinweeklyavg BOOLEAN NOT NULL DEFAULT TRUE,
	enrolleecount INT(10),
	CONSTRAINT pk_event PRIMARY KEY (eventid),
	CONSTRAINT fk_event_noteid FOREIGN KEY (noteid) REFERENCES note(noteid)
);

CREATE TABLE IF NOT EXISTS attendancedetail(
	attendancedetailid INT(10) NOT NULL,
	personid INT(10) NOT NULL,
	eventid INT(10) NOT NULL,
	date TIMESTAMP NOT NULL,
	type1 BOOLEAN NOT NULL DEFAULT FALSE,
	type2 BOOLEAN NOT NULL DEFAULT FALSE,
	type3 BOOLEAN NOT NULL DEFAULT FALSE,
	type4 BOOLEAN NOT NULL DEFAULT FALSE,
	type5 BOOLEAN NOT NULL DEFAULT FALSE,
	noteid INT(10),
	creationdatetime TIMESTAMP NOT NULL,
	revisiondatetime TIMESTAMP NOT NULL,
	visitor BOOLEAN NOT NULL DEFAULT FALSE,
	batchid INT(10),
	batchenteredby VARCHAR(10),
	batchpostedby VARCHAR(10),
	CONSTRAINT pk_attendancedetail PRIMARY KEY (attendancedetailid),
	CONSTRAINT fk_attendancedetail_personid FOREIGN KEY (personid) REFERENCES person(personid),
	CONSTRAINT fk_attendancedetail_eventid FOREIGN KEY (eventid) REFERENCES event(eventid),
	CONSTRAINT fk_attendancedetail_noteid FOREIGN KEY (noteid) REFERENCES note(noteid)
);

CREATE TABLE IF NOT EXISTS contributionfund(
	fundid INT(10) NOT NULL,
	fundnumber INT(10) NOT NULL,
	name VARCHAR(50) NOT NULL,
	incomeaccount INT(10),
	bankaccount INT(10),
	ispledgerenewed BOOLEAN NOT NULL DEFAULT FALSE,
	posting DOUBLE(15,4),
	noteid INT(10),
	creationdatetime TIMESTAMP NOT NULL,
	revisiondatetime TIMESTAMP NOT NULL,
	usefasb116 BOOLEAN NOT NULL DEFAULT FALSE,
	fasb116accountid INT(10),
	postingpledged DOUBLE(15,4),
	isinactive BOOLEAN NOT NULL DEFAULT FALSE,
	CONSTRAINT pk_contributionfund PRIMARY KEY (fundid),
	CONSTRAINT fk_contributionfund_noteid FOREIGN KEY (noteid) REFERENCES note(noteid)
);

CREATE TABLE IF NOT EXISTS contribution(
	contributionid INT(10) NOT NULl,
	pledgeid INT(10),
	date TIMESTAMP NOT NULL,
	fundid INT(10) NOT NULL,
	amount DOUBLE(15,4) NOT NULL,
	person1id INT(10) NOT NULL,
	person2id INT(10),
	description VARCHAR(50),
	noteid INT(10),
	creationdatetime TIMESTAMP NOT NULL,
	revisiondatetime TIMESTAMP not NULL,
	checknumber VARCHAR(10),
	batchid INT(10),
	batchenteredby VARCHAR(10),
	batchpostedby VARCHAR(10),
	is_eoi_offering BOOLEAN NOT NULL DEFAULT FALSE,
	recurrentofferingid INT(10),
	CONSTRAINT pk_contribution PRIMARY KEY (contributionid),
	CONSTRAINT fk_contribution_fundid FOREIGN KEY (fundid) REFERENCES contributionfund(fundid),
	CONSTRAINT fk_contribution_person1id FOREIGN KEY (person1id) REFERENCES person(personid),
	CONSTRAINT fk_contribution_person2id FOREIGN KEY (person2id) REFERENCES person(personid),
	CONSTRAINT fk_contribution_noteid FOREIGN KEY (noteid) REFERENCES note(noteid)
);

CREATE TABLE IF NOT EXISTS contributor(
	envelope INT(10) NOT NULL,
	nextyearenvelope INT(10) NOT NULL,
	person1id INT(10),
	person2id INT(10),
	isshared BOOLEAN NOT NULL DEFAULT FALSE,
	noteid INT(10),
	creationdatetime TIMESTAMP NOT NULL,
	revisiondatetime TIMESTAMP NOT NULL,
	donotrenumber BOOLEAN NOT NULL DEFAULT FALSE,
	envelopename VARCHAR(200) NOT NULL,
	p1firstornickname VARCHAR(50),
	p1lastname VARCHAR(50),
	p1suffix VARCHAR(50),
	p2firstornickname VARCHAR(50),
	p2lastname VARCHAR(50),
	p2suffix VARCHAR(50),
	statementname VARCHAR(200),
	eoi_id VARCHAR(50),
	preferredstatementmethod INT(10),
	laststatementemaildate TIMESTAMP,
	CONSTRAINT pk_contributor PRIMARY KEY (envelope),
	CONSTRAINT fk_contributor_person1id FOREIGN KEY (person1id) REFERENCES person(personid),
	CONSTRAINT fk_contributor_person2id FOREIGN KEY (person2id) REFERENCES person(personid),
	CONSTRAINT fk_contributor_noteid FOREIGN KEY (noteid) REFERENCES note(noteid)
);

CREATE TABLE IF NOT EXISTS death(
	deathid INT(10) NOT NULL,
	idtype VARCHAR(1) NOT NULL,
	id INT(10) NOT NULL,
	dateofdeath DATE NOT NULL,
	nameofdeceased VARCHAR(50),
	relationship VARCHAR(20),
	noteid INT(10),
	creationdatetime TIMESTAMP NOT NULL,
	revisiondatetime TIMESTAMP NOT NULL,
	CONSTRAINT pk_death PRIMARY KEY (deathid),
	CONSTRAINT fk_death_id FOREIGN KEY (id) REFERENCES person(personid)
);

